import { GoogleGenAI, Chat, Type } from "@google/genai";
import type { VideoPost, LiveComment } from '../types';

// Singleton instance, lazily initialized
let ai: GoogleGenAI | null = null;

function getAiInstance(): GoogleGenAI {
    if (!ai) {
        ai = new GoogleGenAI({ apiKey: process.env.API_KEY });
    }
    return ai;
}


export const createChatSession = (): Chat => {
  const ai = getAiInstance();
  const chat = ai.chats.create({
    model: 'gemini-2.5-flash',
    config: {
      systemInstruction: 'ุฃูุช "ูุณุงุนุฏ VibeZone ุงูุฐูู"ุ ูุณุงุนุฏ ูุฏูุฏ ููุจุฏุน ูู ุชุทุจูู ููุฏูููุงุช ูุตูุฑุฉ ุงุณูู VibeZone. ุชุฎุตุตู ูู ูุณุงุนุฏุฉ ุงููุณุชุฎุฏููู ูู ุงูุญุตูู ุนูู ุฃููุงุฑ ูููุญุชููุ ูุชุงุจุฉ ุฃูุตุงู ุฌุฐุงุจุฉุ ูุงูุชุฑุงุญ ุฃุบุงูู ุฑุงุฆุฌุฉ. ูู ุฅูุฌุงุจูุงู ููุดุฌุนุงู. ุฃุฌุจ ุฏุงุฆูุงู ุจุงููุบุฉ ุงูุนุฑุจูุฉ.',
    },
  });
  return chat;
};

export const suggestCaption = async (context?: string): Promise<string> => {
    const ai = getAiInstance();
    const prompt = `ุงูุชุฑุญ ูุตูุงู ูุตูุฑุงู ูุฌุฐุงุจุงู ูุฑุงุฆุฌุงู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ูููุฏูู ุนูู ุชุทุจูู VibeZone. ูู ุจุชุถููู 1-3 ูุงุดุชุงุฌุงุช ุฐุงุช ุตูุฉ. ${context ? `ุงูููุฏูู ูุฏูุฑ ุญูู: "${context}"` : ''}`;
    const response = await ai.models.generateContent({
        model: 'gemini-2.5-flash',
        contents: prompt,
    });
    return response.text;
};

export const generateLiveComments = async (topic: string): Promise<LiveComment[]> => {
    const ai = getAiInstance();
    const prompt = `ุฃูุช ูุดุงูุฏ ูู ุจุซ ูุจุงุดุฑ ุนูู ุชุทุจูู VibeZone. ููุถูุน ุงูุจุซ ูู "${topic}". ูู ุจุฅูุดุงุก ูุงุฆูุฉ ูู 15 ุชุนููููุง ูุชููุนูุง ูุฏ ููุชุจูุง ุงูุฌูููุฑ. ูุฌุจ ุฃู ุชููู ุงูุชุนูููุงุช ูุตูุฑุฉุ ูุงูุนูุฉุ ูุจุงูููุฌุฉ ุงูุนุงููุฉ ุงูุนุฑุจูุฉ (ุฎููุท ูู ุงูููุฌุงุช). ุงุฌุนููุง ูุชููุนุฉ ุจูู ุงูุฃุณุฆูุฉุ ุงูุฅุทุฑุงุกุงุชุ ุงูููุงุชุ ูุงูุชุนูููุงุช ุงูุนุดูุงุฆูุฉ.
ูุฏู ุงูุฅุฌุงุจุฉ ูู JSON array. ูุฌุจ ุฃู ููุซู ูู ูุงุฆู ูู ุงูู array ุชุนููููุง ูุงุญุฏูุง ููุฌุจ ุฃู ูููู ูู ุงูุจููุฉ ุงูุชุงููุฉ:
- id: ุณูุณูุฉ ูุฑูุฏุฉ.
- user: ูุงุฆู ูุญุชูู ุนูู username (ุงุณู ูุณุชุฎุฏู ุนุฑุจู ุนุดูุงุฆู) ู avatarUrl (ุฑุงุจุท ุตูุฑุฉ ุฑูุฒูุฉ ุนุดูุงุฆู ูู https://i.pravatar.cc/150?u= ูุชุจูุนูุง ุจุณูุณูุฉ ุนุดูุงุฆูุฉ).
- text: ูุต ุงูุชุนููู.`;

    try {
        const response = await ai.models.generateContent({
            model: "gemini-2.5-flash",
            contents: prompt,
            config: {
                responseMimeType: "application/json",
                responseSchema: {
                    type: Type.ARRAY,
                    items: {
                        type: Type.OBJECT,
                        properties: {
                            id: { type: Type.STRING },
                            user: {
                                type: Type.OBJECT,
                                properties: {
                                    username: { type: Type.STRING },
                                    avatarUrl: { type: Type.STRING },
                                },
                                required: ['username', 'avatarUrl']
                            },
                            text: { type: Type.STRING },
                        },
                        required: ['id', 'user', 'text']
                    },
                },
            },
        });

        const jsonStr = response.text.trim();
        return JSON.parse(jsonStr) as LiveComment[];
    } catch (error) {
        console.error("Failed to generate live comments:", error);
        // Return fallback comments on error
        return [
            { id: 'fallback-1', user: { username: 'ูุชุงุจุน', avatarUrl: 'https://i.pravatar.cc/150?u=fallback1' }, text: 'ูููุฑ ุงูุจุซ! ๐ฅ' },
            { id: 'fallback-2', user: { username: 'ูุดุงูุฏ', avatarUrl: 'https://i.pravatar.cc/150?u=fallback2' }, text: 'ุฃูุถู ุณุชุฑููุฑ ูุงููู' },
            { id: 'fallback-3', user: { username: 'ูุชุญูุณ', avatarUrl: 'https://i.pravatar.cc/150?u=fallback3' }, text: 'ููู ูุง ุฃุณุทูุฑุฉ!' },
        ];
    }
};